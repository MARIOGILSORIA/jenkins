pipeline {
    agent any
    parameters {
        string(name: 'name_container', defaultValue: 'proyecto-qa', description: 'nombre del docker')
        string(name: 'name_imagen', defaultValue: 'iproyecto-qa', description: 'nombre de la imagen')
        string(name: 'tag_imagen', defaultValue: 'latest', description: 'etiqueta de la imagen')
        string(name: 'puerto_imagen', defaultValue: '81', description: 'puerto a publicar')
    }
    environment {
        name_final = "${params.name_container}${params.tag_imagen}${params.puerto_imagen}"
    }
    stages {
        stage('stop/rm') {
            steps {
                script {
                    def DOCKER_EXIST = bat(returnStatus: true, script: """
                        docker ps -a --format "{{.Names}}" | findstr ${name_final}
                    """)
                    
                    if (DOCKER_EXIST.trim() != "") {
                        bat """
                            docker stop %name_final%
                            docker rm %name_final%
                        """
                    } else {
                        echo "Container ${name_final} does not exist or is not running. Skipping stop/rm stage."
                    }
                }
            }
        }
        stage('build') {
            steps {
                script {
                    bat """
                        docker build . -t %name_imagen%:%tag_imagen%
                    """
                }
            }
        }
        stage('run') {
            steps {
                script {
                    bat """
                        docker run -dp %puerto_imagen%:80 --name %name_final% %name_imagen%:%tag_imagen%
                    """
                }
            }
        }
    }
}
